buildscript {
    repositories {
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://dl.bintray.com/jetbrains/kotlin-native-dependencies' }
        maven { url 'https://maven.google.com' }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.moowork.gradle:gradle-node-plugin:$gradle_node_version"
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:$kotlin_native_version"
        classpath "com.android.tools.build:gradle:$gradle_android_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_plugin_version"
    }
}

static def platformOf(project) {
    if (project.name.endsWith('common')) return 'common'
    if (project.name.endsWith('browser')) return 'js'
    if (project.name.endsWith('native')) return 'native'
    if (project.name.endsWith('ios')) return 'native'
    if (project.name.endsWith('jvm')) return 'jvm'
    return 'common'
}

def libs = ['common', 'jvm', 'ios', 'browser']
configure(subprojects.findAll { libs.contains(it.name) }) {
    def platform = platformOf(project)

    group 'io.ktor.common.client'
    version '0.1.5'


    repositories {
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
        maven { url 'https://kotlin.bintray.com/kotlinx' }
        maven { url 'https://maven.google.com' }
        jcenter()
    }

    if (platform == 'native') {
        apply plugin: 'konan'
    } else {
        apply plugin: "kotlin-platform-$platform"
        kotlin.experimental.coroutines 'enable'
    }

    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    tasks.withType(Test) {
        testLogging {
            showStandardStreams = true
            events 'passed', 'failed'
        }
    }

}

def publish = ['common', 'jvm', 'browser']
configure(subprojects.findAll { publish.contains(it.name) }) { project ->
    apply from: rootProject.file('gradle/bintray.gradle')
    apply from: rootProject.file('gradle/publish.gradle')
}
